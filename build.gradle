buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven {url='https://dist.creeper.host/Sponge/maven'}
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
plugins {
    id "com.wynprice.cursemaven" version "2.1.1"
}
apply plugin: 'net.minecraftforge.gradle'

group = "svenhjol.charm" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = mod_name
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
version = "${minecraft_version}-${mod_version}.${mod_build_number}"

minecraft {
    mappings channel: 'snapshot', version: "${forge_mappings}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client = {
            properties 'forge.logging.markers': ''
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            arg "-mixin.config=charm.mixins.json"
            source sourceSets.main
            jvmArgs "-Xmx1500M"
        }
        server = {
            properties 'forge.logging.markers': ''
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            arg "-mixin.config=charm.mixins.json"
            source sourceSets.main
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-${jei}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${jei}")

    // enable in gradle.properties to test quark compat
    if (compile_quark == "true") {
        compile fg.deobf("vazkii.autoreglib:AutoRegLib:${arl}")
        compile fg.deobf("vazkii.quark:Quark:${quark}")
        compile fg.deobf("curse.maven:${quark_oddities}")
    }

    // enable in gradle.properties to test botania compat
    if (compile_botania == "true") {
        compile fg.deobf("curse.maven:${botania}")
        compile fg.deobf("curse.maven:${patchouli}")
        compile fg.deobf("curse.maven:${curios}")
    }
}

repositories {
    maven { // for JEI
        url "http://dvs1.progwml6.com/files/maven"
    }

    maven { // for AutoRegLib and Quark
        name "blamejared"
        url "http://maven.blamejared.com/"
    }

    maven { // for Curseforge mod download
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }

    maven {
        // for Mappings
        name "gigaherz"
        url "http://dogforce-games.com/maven/"
    }

    flatDir {
        dirs "libs"
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand 'version': mod_version, 'minecraft_version': minecraft_version, 'forge_version': forge_version
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "${mod_name}",
            "Specification-Vendor": "svenhjol",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": "${mod_name}",
            "Implementation-Version": "${mod_version}",
            "Implementation-Vendor": "svenhjol",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "charm.mixins.json"
        ])
    }
}

apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
}